<launch>
  <!-- Argument to select robot model -->
  <arg name="model" default="$(env OMNI_DIFF_MODEL)" doc="Robot model: boe_bot or omni" />

  <!-- World arguments -->
  <arg name="world_name" default="new_room.world" />
  <arg name="world_path" default="$(find omni_diff)/worlds/$(arg world_name)" />

  <!-- Start Gazebo with specified world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_path)" />
    <arg name="paused" value="false" />
    <arg name="use_sim_time" value="true" />
    <arg name="gui" value="true" />
    <arg name="headless" value="false" />
    <arg name="debug" value="false" />
  </include>

  <!-- Load robot description based on model -->
  <param name="robot_description" 
         command="cat $(find omni_diff)/urdf/$(arg model).urdf" />

  <!-- Robot state publisher -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <!-- Joint state publisher -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

  <!-- Spawn robot in Gazebo -->
  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model"
        args="-param robot_description -urdf -model $(arg model) -x -0.5 -y 0 -z 0.0045 -R 0 -P 0 -Y 0"
        output="screen" />

  <!-- Hector SLAM arguments -->
  <arg name="odom_frame" default="odom"/>
  <arg name="base_frame" default="base_footprint"/>
  <arg name="scan_subscriber_queue_size" default="5"/>
  <arg name="scan_topic" default="scan"/>
  <arg name="map_size" default="2048"/>
  <arg name="pub_map_odom_transform" default="true"/>
  <arg name="tf_map_scanmatch_transform_frame_name" default="scanmatcher_frame"/>

  <!-- Hector mapping -->
  <node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">
    <!-- Frame names -->
    <param name="map_frame" value="map" />
    <param name="odom_frame" value="$(arg odom_frame)" />
    <param name="base_frame" value="$(arg base_frame)" />

    <!-- Tf use -->
    <param name="use_tf_scan_transformation" value="true"/>
    <param name="use_tf_pose_start_estimate" value="false"/>
    <param name="pub_map_scanmatch_transform" value="true" />
    <param name="pub_map_odom_transform" value="$(arg pub_map_odom_transform)"/>
    <param name="tf_map_scanmatch_transform_frame_name" value="$(arg tf_map_scanmatch_transform_frame_name)" />

    <!-- Map size / start point -->
    <param name="map_resolution" value="0.050"/>
    <param name="map_size" value="$(arg map_size)"/>
    <param name="map_start_x" value="0.5"/>
    <param name="map_start_y" value="0.5" />
    <param name="map_multi_res_levels" value="2" />

    <!-- Map update parameters -->
    <param name="update_factor_free" value="0.4"/>
    <param name="update_factor_occupied" value="0.9" />   
    <param name="map_update_distance_thresh" value="0.1"/>
    <param name="map_update_angle_thresh" value="0.04" />
    <param name="map_pub_period" value="2" />
    <param name="laser_z_min_value" value="-0.1" />
    <param name="laser_z_max_value" value="0.1" />
    <param name="laser_min_dist" value="0.12" />
    <param name="laser_max_dist" value="3.5" />

    <!-- Advertising config -->
    <param name="advertise_map_service" value="true"/> 
    <param name="scan_subscriber_queue_size" value="$(arg scan_subscriber_queue_size)"/>
    <param name="scan_topic" value="$(arg scan_topic)"/>
  </node>

  <!-- RViz for visualization -->
  <node pkg="rviz" type="rviz" name="rviz" 
        args="-d $(find omni_diff_slam)/rviz/hector_slam.rviz"/>
</launch>